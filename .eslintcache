[{"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\index.js":"1","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\reportWebVitals.js":"2","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\App.js":"3","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Player.js":"4","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Song.js":"5","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\data.js":"6","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Library.js":"7","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\LibrarySong.js":"8","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Nav.js":"9"},{"size":478,"mtime":1611541354004,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1872,"mtime":1611945618493,"results":"13","hashOfConfig":"11"},{"size":2938,"mtime":1611945355974,"results":"14","hashOfConfig":"11"},{"size":283,"mtime":1611856485070,"results":"15","hashOfConfig":"11"},{"size":2043,"mtime":1611613192770,"results":"16","hashOfConfig":"11"},{"size":658,"mtime":1611876497923,"results":"17","hashOfConfig":"11"},{"size":954,"mtime":1611945331282,"results":"18","hashOfConfig":"11"},{"size":433,"mtime":1611876519161,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"i0u9wo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\index.js",[],["40","41"],"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\reportWebVitals.js",[],"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\App.js",[],"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Player.js",["42"],"import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaPlay,\r\n\tfaAngleLeft,\r\n\tfaAngleRight,\r\n\tfaPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n\taudioRef,\r\n\tcurrentSong,\r\n\tisPlaying,\r\n\tsetIsPlaying,\r\n\tsetSongInfo,\r\n\tsongInfo,\r\n\tsongs,\r\n\tsetCurrentSong,\r\n\tsetSongs,\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\t// Add active state\r\n\t\tconst updatedActiveSongs = songs.map((song) => {\r\n\t\t\tif (song.id === currentSong.id) {\r\n\t\t\t\treturn { ...song, active: true };\r\n\t\t\t} else {\r\n\t\t\t\treturn { ...song, active: false };\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetSongs(updatedActiveSongs);\r\n\t}, [currentSong]);\r\n\r\n\t// Play song handler\r\n\tconst playSong = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\taudioRef.current.pause();\r\n\t\t} else {\r\n\t\t\taudioRef.current.play();\r\n\t\t}\r\n\t\tsetIsPlaying(!isPlaying);\r\n\t};\r\n\r\n\t// Format time for song\r\n\tconst formatTime = (time) => {\r\n\t\treturn (\r\n\t\t\tMath.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n\t\t);\r\n\t};\r\n\r\n\t// Song time slider handler\r\n\tconst dragInputHandler = (event) => {\r\n\t\taudioRef.current.currentTime = event.target.value;\r\n\t\tsetSongInfo({ ...songInfo, currentTime: event.target.value });\r\n\t};\r\n\r\n\t// Skip track button handlers\r\n\tconst skipTrackHandler = async (direction) => {\r\n\t\t// Gets index of current playing song in song array\r\n\t\tlet currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n\t\tif (direction === \"forward\") {\r\n\t\t\t// If longer than song array remainder is 0 and starts over\r\n\t\t\tawait setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n\t\t} else if (direction === \"back\") {\r\n\t\t\t// Checks if song array remainder is -1\r\n\t\t\tif ((currentIndex - 1) % songs.length === -1) {\r\n\t\t\t\tawait setCurrentSong(songs[songs.length - 1]);\r\n\t\t\t\tif (isPlaying) {\r\n\t\t\t\t\taudioRef.current.play();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Goes back as long as array does not equal -1\r\n\t\t\tawait setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n\t\t}\r\n\t\tif (isPlaying) {\r\n\t\t\taudioRef.current.play();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='player'>\r\n\t\t\t<div className='player__time'>\r\n\t\t\t\t<p>{formatTime(songInfo.currentTime)}</p>\r\n\t\t\t\t<input\r\n\t\t\t\t\tmin={0}\r\n\t\t\t\t\tmax={songInfo.duration || 0}\r\n\t\t\t\t\tvalue={songInfo.currentTime}\r\n\t\t\t\t\tonChange={dragInputHandler}\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t/>\r\n\t\t\t\t<p>{songInfo.duration ? formatTime(songInfo.duration) : \"0:00\"}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='player__control'>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tonClick={() => skipTrackHandler(\"back\")}\r\n\t\t\t\t\tclassName='player__back'\r\n\t\t\t\t\tsize='2x'\r\n\t\t\t\t\ticon={faAngleLeft}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tclassName='player__play'\r\n\t\t\t\t\tonClick={playSong}\r\n\t\t\t\t\tsize='2x'\r\n\t\t\t\t\ticon={isPlaying ? faPause : faPlay}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tonClick={() => skipTrackHandler(\"forward\")}\r\n\t\t\t\t\tclassName='player__forward'\r\n\t\t\t\t\tsize='2x'\r\n\t\t\t\t\ticon={faAngleRight}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Song.js",[],"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\data.js",[],"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Library.js",[],"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\LibrarySong.js",[],"C:\\Users\\Travis\\Desktop\\React\\music-player\\src\\components\\Nav.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":31,"column":5,"nodeType":"49","endLine":31,"endColumn":18,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"56","text":"57"},[644,657],"[currentSong, setSongs, songs]"]